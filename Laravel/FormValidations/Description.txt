
============================
FORM VALIDATIONS IN LARAVEL:
============================

-----------------
-----------------
MyForm.blade.php:
-----------------
-----------------

* We will use @error function to display error message for specific field.

* Error message is stored in $message variable.

* Therefore we need to call $message variable within blade syntax. 
      

Syntax: 
        @error('FieldName')
        {{ $message }}
        @enderror


<form action="{{ url('/data') }}" method="post">
@csrf

<input type="text" name="name" placeholder="Enter your name">

@error('name')
<span style="color:red"> {{ $message }} </span>
@enderror
<br>

<input type="submit" value="Submit">

</form>

--------
--------
Web.php:
--------
--------

<?php

use Illuminate\Support\Facades\Route;

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

Route::get('/', function () {
    return view('welcome');
});

Route::get('/MyForm','HomeController@MyForm');
Route::post('/data','HomeController@FormValidate');

---------------
---------------
HomeController:
---------------
---------------

* We will use validate(); function to apply validations.

  In validate(); function, we will apply associative array to implement 
  validation rules by using 'key value' pairs.

  You can use | sign to implement multiple validation rules.

* Syntax: 
         $req->validate([
         'name' => 'required | min:5 | max:15'
        ]);


* For displaying your custom error message, you need to pass another array
  right after validation rules array by giving comma,

* Syntax: 
         $req->validate([
         'name' => 'required'
        ], 
        [
            'FieldName.ValidationName' => 'Custom Error Message'
        ]);


class HomeController extends Controller
{
    public function MyForm()
    {
        return view("Home.MyForm");
    }

    public function FormValidate(Request $req)
    {  
        $req->validate([
            'name' => 'required'
        ],
    [
        'name.required' => 'Name field cannot be left empty'
    ]);
        return view("Home.FormValidate");
    }
